{"title":"Targeting Dashboards","markdown":{"yaml":{"title":"Targeting Dashboards","output":{"html_document":{"includes":{"in_header":"header.html"}}}},"headingText":"Additional setup options","containsRefs":false,"markdown":"\n\n```{r, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)\n# Create a custom header file with HTML to set the browser title\nbrowser_title <- \"<title>Targeting Dashboards</title>\"\nwriteLines(browser_title, \"header.html\")\n\n\n```\n\n\n\n```{css, echo=F}\n  h1.title {\n    font-size: 14px;\n    text-align: center;\n    color: #FFFFFF; /* Change to your desired color */\n  }\n```\n\n\n\n```{r, echo=F}\nlibrary(tidyverse)\n# Sample dataframe with iso2c and country variables\n\n        eu_countries <- c(\"AT\", \"BE\", \"DK\", \"DE\", \"HU\", \"IE\", \"NL\", \"SE\")\n\n\ndf <-\n    read_rds(\"https://github.com/favstats/meta_ad_reports/raw/main/cntry_list.rds\") %>%\n    rename(iso2c = iso2,\n           country = cntry) %>% \n  bind_rows(tibble(iso2c = \"EU\",\n                   country = \"European Union\"), .) %>% \n  filter(iso2c %in% c(eu_countries, \"EU\"))\n\n# Generate HTML code\nhtml_code <- sprintf('<div id=\"overlay\">\n                        <button id=\"selectButton\" style=\"padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px; cursor: pointer;\">Select Country</button>\n                        <select id=\"iframeSelector\" style=\"display:none; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px; cursor: pointer;\">\n                          <option value=\"\" disabled selected>Select Country</option>\n                          %s\n                        </select>\n                      </div>',\n                      paste(sprintf('<option value=\"%s\">%s</option>', df$iso2c, df$country), collapse = \"\\n\"))\n\n# Print the HTML code\nshiny::HTML(html_code)\n\n```\n\n\n<center>\n![](https://i.pinimg.com/originals/e1/80/4e/e1804e9f5a5c4893167f45873342faba.gif)\n</center>\n\n<iframe id=\"iframeDisplay\" style=\"border:none; position:fixed; top:0; left:0; width:100%; height:100vh;\" src=\"https://favstats.github.io/ep2024/EU/map\"></iframe>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/choices.js@9.0.1/public/assets/styles/choices.min.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/choices.js@9.0.1/public/assets/scripts/choices.min.js\"></script>\n\n<script>\n  // Use window.onload to make sure all resources are loaded\n  window.onload = function() {\n    const selectButton = document.getElementById('selectButton');\n    const iframeSelector = document.getElementById('iframeSelector');\n    const iframeDisplay = document.getElementById('iframeDisplay');\n    \n    \n    // Set a maximum length for the src attribute\n    const maxLength = 100;  // Example length limit\n\n    // Check if the current src length exceeds maxLength and if so, set the default src\n    if(iframeDisplay.src.length > maxLength) {\n      iframeDisplay.src = 'https://favstats.github.io/ep2024/EU/map';\n    }\n    \n    if(iframeSelector) {\n      // Now we know iframeSelector is present, we can safely initialize Choices\n      const choices = new Choices(iframeSelector, {\n        searchEnabled: true,\n        shouldSort: false,\n        itemSelectText: ' ',\n      });\n    \n      selectButton.addEventListener('click', function() {\n        selectButton.style.display = 'none';\n        iframeSelector.style.display = 'block';\n      });\n    \n      iframeSelector.addEventListener('change', function() {\n        const selectedOption = iframeSelector.value;\n        iframeDisplay.src = `https://favstats.github.io/ep2024/${selectedOption}`;\n        selectButton.textContent = iframeSelector.options[iframeSelector.selectedIndex].text;\n        iframeSelector.style.display = 'none';\n        selectButton.style.display = 'block';\n      });\n    } else {\n            \n      console.error(\"Can't find the iframeSelector element!\");\n    }\n  };\n</script>\n\n<style>\n#overlay {\n  z-index: 1001; /* Ensure the overlay is above everything else */\n}\n#selectButton {\n  padding: 10px; /* Adjust padding as needed */\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px; /* Adjust font size as needed */\n  cursor: pointer;\n  position: absolute;\n  top: 10px; /* Adjust top as needed */\n  right: 30px; /* Adjust right as needed */\n  z-index: 1001; /* Make sure the button is above the overlay */\n  min-width: 120px; /* Set a fixed minimum width for the button */\n  background-color: #f0f0f0; /* Button background color */\n  color: #333; /* Button text color */\n  transition: background-color 0.3s, color 0.3s; /* Smooth transition */\n}\n\n.choices {\n  position: fixed;\n  top: 10px; /* Adjust top as needed */\n  right: 30px; /* Adjust right as needed */\n  z-index: 1001; /* Make sure the dropdown is above the overlay */\n  min-width: 300px; /* Set a fixed minimum width for the dropdown */\n}\n</style>\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n```{r, include=FALSE}\n# Additional setup options\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)\n# Create a custom header file with HTML to set the browser title\nbrowser_title <- \"<title>Targeting Dashboards</title>\"\nwriteLines(browser_title, \"header.html\")\n\n\n```\n\n\n\n```{css, echo=F}\n  h1.title {\n    font-size: 14px;\n    text-align: center;\n    color: #FFFFFF; /* Change to your desired color */\n  }\n```\n\n\n\n```{r, echo=F}\nlibrary(tidyverse)\n# Sample dataframe with iso2c and country variables\n\n        eu_countries <- c(\"AT\", \"BE\", \"DK\", \"DE\", \"HU\", \"IE\", \"NL\", \"SE\")\n\n\ndf <-\n    read_rds(\"https://github.com/favstats/meta_ad_reports/raw/main/cntry_list.rds\") %>%\n    rename(iso2c = iso2,\n           country = cntry) %>% \n  bind_rows(tibble(iso2c = \"EU\",\n                   country = \"European Union\"), .) %>% \n  filter(iso2c %in% c(eu_countries, \"EU\"))\n\n# Generate HTML code\nhtml_code <- sprintf('<div id=\"overlay\">\n                        <button id=\"selectButton\" style=\"padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px; cursor: pointer;\">Select Country</button>\n                        <select id=\"iframeSelector\" style=\"display:none; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px; cursor: pointer;\">\n                          <option value=\"\" disabled selected>Select Country</option>\n                          %s\n                        </select>\n                      </div>',\n                      paste(sprintf('<option value=\"%s\">%s</option>', df$iso2c, df$country), collapse = \"\\n\"))\n\n# Print the HTML code\nshiny::HTML(html_code)\n\n```\n\n\n<center>\n![](https://i.pinimg.com/originals/e1/80/4e/e1804e9f5a5c4893167f45873342faba.gif)\n</center>\n\n<iframe id=\"iframeDisplay\" style=\"border:none; position:fixed; top:0; left:0; width:100%; height:100vh;\" src=\"https://favstats.github.io/ep2024/EU/map\"></iframe>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/choices.js@9.0.1/public/assets/styles/choices.min.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/choices.js@9.0.1/public/assets/scripts/choices.min.js\"></script>\n\n<script>\n  // Use window.onload to make sure all resources are loaded\n  window.onload = function() {\n    const selectButton = document.getElementById('selectButton');\n    const iframeSelector = document.getElementById('iframeSelector');\n    const iframeDisplay = document.getElementById('iframeDisplay');\n    \n    \n    // Set a maximum length for the src attribute\n    const maxLength = 100;  // Example length limit\n\n    // Check if the current src length exceeds maxLength and if so, set the default src\n    if(iframeDisplay.src.length > maxLength) {\n      iframeDisplay.src = 'https://favstats.github.io/ep2024/EU/map';\n    }\n    \n    if(iframeSelector) {\n      // Now we know iframeSelector is present, we can safely initialize Choices\n      const choices = new Choices(iframeSelector, {\n        searchEnabled: true,\n        shouldSort: false,\n        itemSelectText: ' ',\n      });\n    \n      selectButton.addEventListener('click', function() {\n        selectButton.style.display = 'none';\n        iframeSelector.style.display = 'block';\n      });\n    \n      iframeSelector.addEventListener('change', function() {\n        const selectedOption = iframeSelector.value;\n        iframeDisplay.src = `https://favstats.github.io/ep2024/${selectedOption}`;\n        selectButton.textContent = iframeSelector.options[iframeSelector.selectedIndex].text;\n        iframeSelector.style.display = 'none';\n        selectButton.style.display = 'block';\n      });\n    } else {\n            \n      console.error(\"Can't find the iframeSelector element!\");\n    }\n  };\n</script>\n\n<style>\n#overlay {\n  z-index: 1001; /* Ensure the overlay is above everything else */\n}\n#selectButton {\n  padding: 10px; /* Adjust padding as needed */\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px; /* Adjust font size as needed */\n  cursor: pointer;\n  position: absolute;\n  top: 10px; /* Adjust top as needed */\n  right: 30px; /* Adjust right as needed */\n  z-index: 1001; /* Make sure the button is above the overlay */\n  min-width: 120px; /* Set a fixed minimum width for the button */\n  background-color: #f0f0f0; /* Button background color */\n  color: #333; /* Button text color */\n  transition: background-color 0.3s, color 0.3s; /* Smooth transition */\n}\n\n.choices {\n  position: fixed;\n  top: 10px; /* Adjust top as needed */\n  right: 30px; /* Adjust right as needed */\n  z-index: 1001; /* Make sure the dropdown is above the overlay */\n  min-width: 300px; /* Set a fixed minimum width for the dropdown */\n}\n</style>\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"html_document":{"includes":{"in_header":"header.html"}}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.53","theme":["cosmo","custom.scss"],"fontsize":"1.2em","title":"Targeting Dashboards"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}